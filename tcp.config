Max\u0020Heap=zorka.jmx("java","java.lang:type=Memory","HeapMemoryUsage","max");120
Used\u0020Heap=zorka.jmx("java","java.lang:type=Memory","HeapMemoryUsage","used");60
Used\u0020Heap(%)=jvm.heaputil("HeapMemoryUsage");60
Uptime=sample.milis_to_hours(zorka.jmx("java","java.lang:type=Runtime","Uptime"));120
Start\u0020Time=sample.millis_to_date_string(zorka.jmx("java","java.lang:type=Runtime","StartTime"));120
Loaded\u0020Classes=zorka.jmx("java","java.lang:type=ClassLoading","LoadedClassCount");120
Daemon\u0020Threads=zorka.jmx("java","java.lang:type=Threading","DaemonThreadCount");60
Threads=zorka.jmx("java","java.lang:type=Threading","ThreadCount");60
System\u0020Cpu=zorka.jmx("java","java.lang:type=OperatingSystem","SystemCpuLoad");60
Process\u0020Cpu=zorka.jmx("java","java.lang:type=OperatingSystem","ProcessCpuLoad");60

# JDK 1.8
GC\u0020New\u0020Cpu=zorka.jmx("java","java.lang:name=PS Scavenge,type=GarbageCollector","CollectionTime");60
GC\u0020Old\u0020Cpu=zorka.jmx("java","java.lang:name=PS MarkSweep,type=GarbageCollector","CollectionTime");60
GC\u0020New\u0020Cycles=zorka.jmx("java","java.lang:name=PS Scavenge,type=GarbageCollector","CollectionCount");60
GC\u0020Old\u0020Cycles=zorka.jmx("java","java.lang:name=PS MarkSweep,type=GarbageCollector","CollectionCount");60

# JDK 1.7
Perm\u0020Gen=zorka.jmx("java","java.lang:name=Perm Gen,type=MemoryPool","Usage","used");60
Perm\u0020Gen(%)=jvm.memutil("Perm Gen");60
